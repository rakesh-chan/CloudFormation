Description:
    Associating EIP to NATGW+(VPC+IGW+Subnet)

Parameters:
    EnvironmentName:
        Description: Naming our VPC 
        Type: String
    VpcCIDR:
        Description: CIDR block for VPC 
        Type: String
        Default: "10.0.0.0/16"
    PublicSubnet1CIDR:
        Description: Public Subnet 1
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2CIDR:
        Description: Public Subnet 2
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1CIDR:
        Description: Private Subnet 1
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2CIDR:
        Description: Private Subnet 2
        Type: String
        Default: 10.0.3.0/24
Resources:
      myVPC:
          Type: AWS::EC2::VPC
          Properties:
              CidrBlock: !Ref VpcCIDR
              EnableDnsHostnames: true
              Tags:
                  - Key : Name
                    Value : !Ref EnvironmentName
      myIGW:
          Type: AWS::EC2::InternetGateway
          Properties:
              Tags:
                  - Key : Name
                    Value : !Ref EnvironmentName
      myIGWAttachment:
          Type: AWS::EC2::VPCGatewayAttachment
          Properties:
              VpcId: !Ref myVPC
              InternetGatewayId: !Ref myIGW 
      PublicSubnet1:
          Type: AWS::EC2::Subnet
          Properties:
            VpcId: !Ref myVPC
            AvailabilityZone: !Select [0, !GetAZs '']
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key : Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
      PublicSubnet2:
          Type: AWS::EC2::Subnet
          Properties:
              VpcId: !Ref myVPC
              CidrBlock: !Ref PublicSubnet2CIDR
              AvailabilityZone: !Select [1, !GetAZs '']
              MapPublicIpOnLaunch: true
              Tags:
                  - Key : Name
                    Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
      PrivateSubnet1:
          Type: AWS::EC2::Subnet
          Properties:
            VpcId: !Ref myVPC
            CidrBlock: !Ref PrivateSubnet1CIDR
            AvailabilityZone: !Select [0, !GetAZs '']
            MapPublicIpOnLaunch: false
            Tags:
                - Key : Name
                  Value : !Sub ${EnvironmentName} Private Subnet (AZ2)
      PrivateSubnet2:
          Type: AWS::EC2::Subnet
          Properties:
              VpcId: !Ref myVPC
              CidrBlock: !Ref PrivateSubnet2CIDR
              AvailabilityZone: !Select [1, !GetAZs '']
              MapPublicIpOnLaunch: false
              Tags:
                  - Key : Name
                    Value : !Sub ${EnvironmentName} Private Subnet (AZ2)
      
      myNatGW1:
          Type: AWS::EC2::NatGateway
          Properties:
              AllocationId: !GetAtt NATGateway1EIP.AllocationId
              SubnetId: !Ref PublicSubnet1
      myNATGW2:
          Type: AWS::EC2::NatGateway
          Properties:
              AllocationId: !GetAtt NATGateway2EIP.AllocationId
              SubnetId: !Ref PublicSubnet2
      NATGateway1EIP:
          Type: AWS::EC2::EIP
          DependsOn: myIGWAttachment
          Properties:
              Domain: vpc
      NATGateway2EIP:
          Type: AWS::EC2::EIP
          DependsOn: myIGWAttachment
          Properties:
              Domain: vpc


                           
              
              
